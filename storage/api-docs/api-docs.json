{
    "openapi": "3.0.0",
    "info": {
        "title": "APIS-CUSTOMERS",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "description": "Register a new user by providing name, email, and password.",
                "operationId": "3b1b7c3882f141f58eb4aae4b598fb0a",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully created"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "Bearer your_token_here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "description": "Authenticate user by providing email and password.",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully authenticated"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "Bearer your_token_here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Unauthorized"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/communes": {
            "get": {
                "tags": [
                    "Communes"
                ],
                "summary": "Retrieve all communes",
                "description": "Get a list of all communes.",
                "operationId": "86e992d6ebe9077589081d2231fef66c",
                "responses": {
                    "200": {
                        "description": "A list of communes"
                    }
                }
            },
            "post": {
                "tags": [
                    "Communes"
                ],
                "summary": "Create a new commune",
                "description": "Create a new commune with id_reg, description and status.",
                "operationId": "b61f1f5e46b8d31f100e6b61461ef7f2",
                "parameters": [
                    {
                        "name": "id_reg",
                        "in": "query",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Commune description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the commune",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id_reg",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "id_reg": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 90,
                                        "example": "New Commune Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "A"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Commune created successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/communes/{id}": {
            "put": {
                "tags": [
                    "Communes"
                ],
                "summary": "Update data commune",
                "description": "Update an existing commune's id_reg, description and status.",
                "operationId": "2b6023411f0d9251e40f344b5add0053",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id_reg",
                        "in": "query",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Commune description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the commune",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id_reg",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "id_reg": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 90,
                                        "example": "Updated Commune Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "I"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commune updated successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commune not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Commune not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Communes"
                ],
                "summary": "Delete commune",
                "description": "Delete an existing commune by ID.",
                "operationId": "2c9c8d3f22df0f2f2a5cacd680f06c15",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commune deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Commune deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commune not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Commune not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Retrieve all customers",
                "description": "Get a list of all customers.",
                "operationId": "a29d5f0bab561196b8e3bd82422e58e6",
                "responses": {
                    "200": {
                        "description": "A list of customers"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "description": "Create a new customer with the given details.",
                "operationId": "1d27da36718a3e9726c873633af496da",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "query",
                        "description": "Customer DNI",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "id_reg",
                        "in": "query",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id_com",
                        "in": "query",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Customer email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 120
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Customer name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Customer last name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Customer address",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "date_reg",
                        "in": "query",
                        "description": "Registration date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Customer status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dni",
                                    "id_reg",
                                    "id_com",
                                    "email",
                                    "name",
                                    "last_name",
                                    "date_reg",
                                    "status"
                                ],
                                "properties": {
                                    "dni": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "12345678"
                                    },
                                    "id_reg": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id_com": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "customer@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "Doe"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St"
                                    },
                                    "date_reg": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-07"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "A"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{id}": {
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update data customer",
                "description": "Update an existing customer's details.",
                "operationId": "ba374f3626d9dc83865e940b91d5d6dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dni",
                        "in": "query",
                        "description": "Customer DNI",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "id_reg",
                        "in": "query",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id_com",
                        "in": "query",
                        "description": "Commune ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Customer email",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 120
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Customer name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Customer last name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 45
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Customer address",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "date_reg",
                        "in": "query",
                        "description": "Registration date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Customer status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dni",
                                    "id_reg",
                                    "id_com",
                                    "email",
                                    "name",
                                    "last_name",
                                    "date_reg",
                                    "status"
                                ],
                                "properties": {
                                    "dni": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "12345678"
                                    },
                                    "id_reg": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id_com": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "customer@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "Doe"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St"
                                    },
                                    "date_reg": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-07"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "A"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete customer",
                "description": "Delete an existing customer by ID.",
                "operationId": "b01ba7fa065f0d5c08b1bbc777ab7108",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Retrieve all regions",
                "description": "Get a list of all regions.",
                "operationId": "aa03b59c4f13cb98ebe59cdf5b96c3b1",
                "responses": {
                    "200": {
                        "description": "A list of regions"
                    }
                }
            },
            "post": {
                "tags": [
                    "Regions"
                ],
                "summary": "Create a new region",
                "description": "Create a new region with description and status.",
                "operationId": "f413ef316bea04b1c9ceb47d0677982b",
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Region description",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 90
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the region",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "maxLength": 90,
                                        "example": "New Region Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "A"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Region created successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions/{id}": {
            "put": {
                "tags": [
                    "Regions"
                ],
                "summary": "Update data region",
                "description": "Update an existing region's description and status.",
                "operationId": "d7fcaf48a4432c9ff68f2a65cbb427cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Region description",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 90
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the region",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "I",
                                "trash"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "maxLength": 90,
                                        "example": "Updated Region Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "A",
                                            "I",
                                            "trash"
                                        ],
                                        "example": "I"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Region updated successfully"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Regions"
                ],
                "summary": "Delete region",
                "description": "Delete an existing region by ID.",
                "operationId": "567d7cae4e4b068d600e845a2d9519ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Region ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Communes",
            "description": "Communes"
        },
        {
            "name": "Customers",
            "description": "Customers"
        },
        {
            "name": "Regions",
            "description": "Regions"
        }
    ]
}